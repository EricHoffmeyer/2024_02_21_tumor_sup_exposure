---
title: "2024_04_03_drug_antibody_targets"
format: html
editor: visual
---

Trying some new methods to discover targets for treatment using bulk RNAseq results. In this notebook I will look at the the differentially expressed genes shared by both HOS and OS17 cells exposed to CAR T cell supernatant.

# Libraries

```{r}
suppressPackageStartupMessages({
library(tidyverse)
library(readr)
})
```

# Set up directories

```{r}
result.dir <- "2024_04_03_results/"

if(!exists(result.dir)){
  dir.create(result.dir)
}
```

# Read in data

In excel, I took HOS_OS17_shared_DE_genes.csv from `2024_03_08_results` and ranked (by padj) the genes for each tumor cell line. For genes where p = 0, I gave an equivalent rank of 1. I then added the ranks for each cell line into a rank_sum column and arranged by rank_sum from smallest to largest. Then I made a gene_rank column based on rank_sum.

This file was saved as HOS_OS17_shared_DE_genes_ranked.csv in the data folder.

Also reading in a drug table from the Broad Institute's Drug Repurposing website, an approved monoclonal antibody table adapted from Wikipedia, and a table of plasma membrane genes from Amigo2 (plasma membrane GO:0005886).

```{r}
drug.df <- read_delim("data/repurposing.drug.data.txt", 
                      delim = "\t", 
                      escape_double = FALSE, 
                      trim_ws = TRUE) |> 
  drop_na(Target) |> 
  separate_longer_delim(Target, delim = ", ")

ab.df <- read_csv("data/fda.approved.antibodies.csv")

gene.df <- read_csv("data/HOS_OS17_shared_DE_genes_ranked.csv") |> 
  select(gene_symbol, gene_rank, gene_desc, hos_log2FC, hos_padj, os17_log2FC, os17_padj) # select only relevant columns

transmembrane.df <- read_delim("data/plasma.membrane.GO0005886.txt", 
                               delim = "\t", 
                               col_names = F,
                               escape_double = FALSE, 
                               trim_ws = TRUE) |> 
  select(!c(4,6,10,13))

colnames(transmembrane.df) <- c("gene_label", "bioentity", "bioentity_name", "annotation_class", "assigned_by", "taxon", "evidence_type", "panther_family", "type", "reference", "date", "organism")
```

# Drug targets

Starting with the drug dataframe, because the gene target names are already consistent with our results.

First, some drugs have multiple targets. I need to split those up into separate columns.

```{r}
drug.df <- drug.df |> 
  separate_longer_delim(Target, delim = ", ")
```

Use `inner_join` to keep common values between the gene.df and the drug.df in a new gene.drug.df

```{r}
gene.drug.df <- gene.df |> 
  inner_join(drug.df, by = c("gene_symbol" = "Target")) |> 
  arrange(gene_rank)

#export results
write.csv(gene.drug.df, file = paste0(result.dir, "drug.targets.csv"),
          row.names = F) 
```

# Transmembrane protein targets

Remove the duplicate values from the gene_label column.

```{r}
transmembrane.df <- transmembrane.df[!duplicated(transmembrane.df[, "gene_label"]),]
```

Merging transmembrane.df with gene.df, and dropping the extra rows from transmembrane.df because they are not very descriptive and make the result table harder to interpret.

```{r}
gene.transmembrane.df <- gene.df |> 
  inner_join(transmembrane.df, by = c("gene_symbol" = "gene_label")) |> 
  select(c(1:7))

#export results
write.csv(gene.transmembrane.df, file = paste0(result.dir, "transmembrane.targets.csv"),
          row.names = F)
```

# Antibody targets

```{r}
gene.ab.df <- gene.df |> 
  inner_join(ab.df, by = c("gene_symbol" = "Target"))
```

Did not see any matches here so I will stop for now.

# TK receptor lookup

Joselyn and Patrick are interested in membrane tyrosine kinase receptors, so they asked me to look for a small list of genes in the CAR supernatant vs control data.

```{r}
gene.df <- read.csv(file = '2024_03_08_results/HOS_OS17_shared_DE_genes.csv',
                    row.names = NULL)

?read.csv
```

```{r}
tk.receptors <- data.frame(tk.receptors = c("VEGFR2", "MET", "KIT", "RET", "AXL", "FLT3", "TIE2", "MER", "Tyro3"))
```

```{r}
tk.df <- inner_join(tk.receptors, gene.df, by = c("tk.receptors" = "gene_symbol"))

write.csv(tk.df, file = "tk.receptor.csv")
```

# Cytokine data

Mike gave me a list of cytokine genes to look up

```{r}
cytokine.df <- read_csv("data/cytokines.txt",
                        col_names = F)|> 
  separate_wider_delim(cols = X1, 
                       delim ="(",
                       names = c("name", "gene_id"))

cytokine.df$gene_id <- str_remove(cytokine.df$gene_id, "[)]")
```


```{r}
cyto.gene.df <- cytokine.df |> 
  inner_join(gene.df, by = c("gene_id" = "gene_symbol"))

write.csv(cyto.gene.df, file = paste0(result.dir, "cytokines.csv"))

```

# 2024_05_24 Update

We tried some methotraxate ("MTX") dosing and wanted to look at genes associated with MTX.

```{r}
mtx.df <- read.csv(file = "data/MTX.sensitivity.genes.csv")
```

```{r}
mtx.related.df <- inner_join(mtx.df, gene.df, by = c("Gene" = "gene_symbol"))
```


```{r}
os.df <- read.csv(file = "2024_03_07_results/deseq_results/OS_17_CAR_sup.vs.OS_17_Media.csv")
hos.df <- read.csv(file = "2024_03_07_results/deseq_results/HOS_CAR_sup.vs.HOS_Media.csv")

os.mtx.df <- inner_join(mtx.df, os.df, by = c("Gene" = "gene_symbol"))
hos.mtx.df<- inner_join(mtx.df, hos.df, by = c("Gene" = "gene_symbol"))
```

Write out results

```{r}
write.csv(mtx.related.df, file = paste0(result.dir, "mtx.shared.sig.genes.csv"))

write.csv(os.mtx.df, file = paste0(result.dir, "mtx.os17.ALL.genes.csv"))

write.csv(hos.mtx.df, file = paste0(result.dir, "mtx.hos.ALL.genes.csv"))
```


## Heatmaps

Mike wants to see heatmaps of these genes, in multiple categories.

Load pheatmap library

```{r}
library(pheatmap)
```

### OS17 MTX gene heatmaps

Starting with OS17. Removing all the character columns to create counts only matrix.

```{r}
os.mtx.matrix <- os.mtx.df |> 
  na.omit() |> 
  column_to_rownames(var = "Gene") |> 
  dplyr::select(contains("OS"))
```

Calling the columns names to help build my annotation variables

```{r}
colnames(os.mtx.matrix)
```

Create annotation variables

```{r}
os.media.samples <- c("OS_17_Media_1_S21_L001", "OS_17_Media_2_S22_L001")

os_anno <- data.frame(sample_name = colnames(os.mtx.matrix)) |> 
  mutate(condition = if_else(sample_name %in% os.media.samples, "Media", "CAR sup")) |> 
  column_to_rownames("sample_name")

row_anno <- mtx.df |> 
  select(!Description) |> 
  tibble::column_to_rownames("Gene") 

os.colors <- c("#FFCC00", "blue")
names(os.colors) <- c("CAR sup", "Media")
os.anno.colors <- list(condition = os.colors)
```

Heatmap of all the genes

```{r}
pheatmap(os.mtx.matrix, 
         scale = "row",
         cluster_rows = F,
         fontsize = 12,
         fontsize_row = 15,
         show_colnames = FALSE,
         treeheight_col = 0,
         annotation = os_anno,
         annotation_row = row_anno,
         annotation_colors = os.anno.colors,
         main = "OS17 MTX-related genes",
         filename = paste0(result.dir, "OS17.MTX.Genes.Heatmap.png"))
```

```{r}
row_anno <- mtx.df |> 
  select(!Description) |> 
  tibble::column_to_rownames("Gene")
```

### HOS MTX heatmap

Repeating process for HOS genes

```{r}
hos.mtx.matrix <- hos.mtx.df |> 
  na.omit() |> 
  column_to_rownames(var = "Gene") |> 
  dplyr::select(contains("HOS"))
```

```{r}
colnames(hos.mtx.matrix)
```

Annotation

```{r}
hos.media.samples <- c("HOS_Media_1_S10_L001", "HOS_Media_2_S11_L001")

hos_anno <- data.frame(sample_name = colnames(hos.mtx.matrix)) |> 
  mutate(condition = if_else(sample_name %in% hos.media.samples, "Media", "CAR sup")) |> 
  column_to_rownames("sample_name")

# I can use same row_anno df
# row_anno <- mtx.df |> 
#   select(!Description) |> 
#   tibble::column_to_rownames("Gene") 

# Reusing these colors, just calling the "os" variables
# hos.colors <- c("#FFCC00", "blue")
# names(hos.colors) <- c("CAR sup", "Media")
# hos.anno.colors <- list(condition = os.colors)
```

```{r}
pheatmap(hos.mtx.matrix, 
         scale = "row",
         cluster_rows = F,
         fontsize = 12,
         fontsize_row = 15,
         show_colnames = FALSE,
         treeheight_col = 0,
         annotation = hos_anno,
         annotation_row = row_anno,
         annotation_colors = os.anno.colors,
         main = "HOS MTX-related genes",
         filename = paste0(result.dir, "HOS.MTX.Genes.Heatmap.png"))
```


























```{r}
sessionInfo()
```
